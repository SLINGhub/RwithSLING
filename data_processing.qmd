# Post-processing/QC

```{r}
#| label: setup
#| echo: false
#| message: false
source("_common.R")
library(knitr)

```

## Libraries

```{r}
#| label: load-lib
#| echo: true
#| message: false
#| results: hide
library(here)
library(tidyverse)
```

## Data Format

The examples below require a tidy ('long-format') table with following columns: `DataFileName`, `Feature` and `Area`. See chapters xxxx on how to prepare data in this format. For this chapter we use the example data

```{r}
#| label: read-testdata
#| echo: true
#| message: false
#| results: hide

# Load and format test data
mydataset_orig <- read_csv(here("data/Testdata_Lipidomics_flat_wide_V3.csv"))

# Convert to long format
mydataset <- mydataset_orig |> 
  pivot_longer(-DataFileName, names_to = "Feature", values_to = "Area")
```

Alternatively, to import a MassHunter CSV file you can use `read_MassHunterCSV` from the `SLINGtools` (<https://slinghub.github.io/SLINGtools>) package

```{r}
#| label: read-testdataHM
#| echo: true
#| message: false
#| results: hide

mydataset <- SLINGtools::read_MassHunterCSV(
  file = here("data/Testdata_MHQuant_Detailed_V3.csv"))
```

## Annotate

```{r}

d <- mydataset |> 
  select(DataFileName, Lipid = Feature, Area) |> 
  separate(col = DataFileName, 
           into = c("RunID", "QCtype", "SampleName"),
           convert = TRUE,
           sep = "_", 
           remove = FALSE) |> 
  mutate(SampleName = str_replace(SampleName, ".d", "")) 



```

## RunScatter

This is for one page (means one plot with n rows and m columns)

```{r}
#| label: plot-1
#| echo: true
#| message: false
#| fig-height: 10
#| results: hide


d_plot <- d |>
  filter(str_detect(string = Lipid, pattern = fixed("ISTD"))) |> 
  filter(QCtype %in% c("SPL", "RQC", "TQC", "BQC", "PBLK"))

d_plot$QCtype <- factor(d_plot$QCtype, levels = c("SPL", "RQC", "TQC", "BQC", "PBLK"))

d_plot <- d_plot |> arrange(QCtype)

qc_colors <- c("SPL"="grey50", "TQC" = "blue", "BQC" = "red", 
               "RQC" = "grey80", PBLK="green", "NA" = "black")

ggplot(data = d_plot,
       mapping = aes(x=RunID, y=Area)) +
  geom_point(aes(color = QCtype), size = 1.5) +
  facet_wrap(vars(Lipid), scales = "free_y") + 
  scale_color_manual(values = qc_colors ) +
  theme_grey(base_size = 8)


```
