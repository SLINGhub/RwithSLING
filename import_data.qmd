---
bibliography: references.bib
number-sections: true
suppress-bibliography: false
---

# Import data into R

```{r}
#| results: "asis"
#| echo: false
source("_common.R")
```

## Introduction

Importing data is often the first step in a data analysis project. Quality and integrity of imported data is key for the subsequent analysis - *Quality In Quality Out*. A good overview of data import in R helps to ensure integrity, completeness and efficient import of data .

## Libraries

```{r}
#| label: load-lib
#| echo: true
#| message: false
library(here)
library(tidyverse)
library(readxl)
```

## Read CSV files {#sec-readcsv}

```{r}
#| label: read-csv
#| echo: true
#| message: false
# Read a CSV file
mydata <- read_csv(file = here("data/Testdata_wide.csv"), 
                   col_names = TRUE, 
                   trim_ws = TRUE,
                   na = c("", "NA", "ND"))
```

The console output summarizes the data types assigned to the different columns

```{r}
#| label: read-csv-out
#| echo: false
#| message: true
# Read a CSV file
mydata <- read_csv(file = here("data/Testdata_wide.csv"), 
                   col_names = TRUE, 
                   trim_ws = TRUE,
                   na = c("", "NA", "ND"))
```

**Output**

A data frame (tibble)

**Parameters**

-   `col_names = TRUE` means the first row defines column names (default is TRUE)
-   `trim_ws = TRUE` removes white-spaces before and after text (default is TRUE)
-   `na` defines which text values are to be treated as missing values (NA). See also [Section @sec-missingvalues]

## Read EXCEL sheets

```{r}
#| label: read-xls
#| echo: true
#| message: true
# Read a sheet from an EXCEL xlsx file
mydata <- read_xlsx(path = here::here("data/Testdata_wide.xlsx"),
                            sheet = "Sheet1",
                            trim_ws = TRUE, 
                            na = c("", "NA", "ND"), )
```

**Output**

A data frame (tibble)

**Parameters**

-   `sheet` defines the Excel sheet to be imported
-   For other parameters, see [Section @sec-readcsv]

## Remarks {#sec-remarks}

::: {.callout-note style="background-color: #EBEBEB;" appearance="simple"}
Verify the integrity of imported data - do not just assume all is fine
:::

### Date File Formats {#sec-dataformats}

-   Use structured and consistent data files as input data
-   First row should contain column names.
-   Avoid rows before and after the table (e.g. descriptions or notes)
-   *Rows* should contain *observations* (e.g. samples) and *columns* the *variables* (e.g. compounds)

### Missing Values {#sec-missingvalues}

-   `read_csv()` or `read_xlsx()` assign empty/missing values as `NA` (*Not Available*).
-   Data files may contain specific text values for missing values (e.g.,"*ND"*,"*LOD"*, *"hemolytic")*. By default, `read_csv()` and `read_xlsx()` assign columns with such values as text (character) instead as numeric - even if there is just one such text value. You can use the `na` parameter to set text values to be interpreted as NA (see example)
-   Column that contain only missing values will be assigned the data type `logical`

### Data Types {#sec-datatypes}

-   **Note:** `read_csv()` or `read_xlsx()` will by default ***guess*** the data type of each column.
-   Typical data types are numbers (`dbl`), text (`chr`), logical (`lgl`) and factor (`fct`)
-   If a column contains only one cell with text, the full column will be defined as text.
-   Columns that contains only missing values will be assigned the data type `logical`
-   You can define the column types already at import (see `?read_csv`).

## More Readings

1.  [@r4ds_dataimport]
