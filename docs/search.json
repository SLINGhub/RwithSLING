[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "RwithSLING",
    "section": "",
    "text": "In this online book you will find notes and recipes prepared during the RwithSLING workshop sessions in 2022 at the Singapore Lipidomics Incubator (SLING) @ NUS\nThese RwithSLING workshop sessions are aimed as an applied quick-start into the usage of R in the processing, management and analysis of dataset handled in the lab. Focus is on mass spectrometry (MS)-based lipidomics datasets and study metadata.\nThese notes were prepared before and after workshop sessions, covering topics discussed among the workshop participants. We try to include frequent questions, challenges, pitfalls and possible solutions. The books is structured into two parts, (i) general topics and (ii) specific recipes to specific data processing scenarios in the lab.\nFeedback and contributions are very welcome!"
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "1  Introduction",
    "section": "",
    "text": "Following software need to be installed on your computer to work with the examples shown in this online book:\n\nR Version 4.1 (or higher) https://cloud.r-project.org/. Check your R version by running following command in your console: ::: {.cell}\nR.Version()$version.string\n\n#> [1] \"R version 4.2.0 (2022-04-22 ucrt)\"\n\n:::\nRStudio Version 2022.02 or higher https://www.rstudio.com/products/rstudio/download/#download. Check your RStudio version by either looking clicking About RStudio under the menu Help, or by running following command in your console\n\nrstudioapi::versionInfo()$version\n\n\nFollowing software are only needed for specific chapters/examples:\n\nGit https://git-scm.com/downloads\nFor Windows: Rtools <https://cran.r-project.org/bin/windows/Rtools/"
  },
  {
    "objectID": "intro.html#frequently-used-r-packages",
    "href": "intro.html#frequently-used-r-packages",
    "title": "1  Introduction",
    "section": "1.2 Frequently used R packages",
    "text": "1.2 Frequently used R packages\nSee also @ref(Installing R packages)\nFollowing R packages will be often used in the given examples and it is thus recommended to install them before starting with this book\n\nhere\ntidyverse(installs ggplot2, dplyr, tidyr, tibble, readr, forcats, stringr, purrr)\nreadxl\nremotes\n\nRun this in your R command line to install these packages:\n\npkg_list <- c(\"here\", \"tidyverse\", \"readxl\", \"remotes\")\ninstall.packages(pkg_list)"
  },
  {
    "objectID": "import_data.html",
    "href": "import_data.html",
    "title": "2  Import data into R",
    "section": "",
    "text": "Throughout this workshop we will use datasets that we often us encounter during our work. These include pre-processed MS datasets and study metadata of different types and formats."
  },
  {
    "objectID": "import_data.html#read-csv-files",
    "href": "import_data.html#read-csv-files",
    "title": "2  Import data into R",
    "section": "2.1 Read CSV files",
    "text": "2.1 Read CSV files\n\n2.1.1 Read a perfect CSV file\nPerfect refers here a tidy, consistent table without missing values. A few considerations when importing data files:\n\nThe first row should contains the column names, all subsequent rows data/values\nWhite spaces before or after text fields can (and often will) cause issues downstream, therefore I suggest to trim whitespaces, e.g. by setting trim_ws = TRUE\nIn omics datasets, often rows correspond to samples, and columns to compounds (features).\n\n\ndata_file_path <- here(\"data/Testdata_Lipidomics_flat_wide_V2.csv\")\nd_wide <- readr::read_csv(data_file_path, trim_ws = TRUE)\n\n#> Rows: 215 Columns: 430\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr    (3): DataFileme, SPLType, VialPosition\n#> dbl  (426): CE 14:0, CE 15:0, CE 16:0, CE 16:1, CE 16:2, CE 17:0, CE 17:1, C...\n#> dttm   (1): AcqTimeStamp\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nBy default read_csv() outputs a summary of the import. Note that read_csv will by default guess the type of data each column. The output provides then a summery of the assigned data types (see below). In the example above, we see that all columns describing the samples are text (<char>), and all columns with lipid names are numeric (<dbl>).\n\n\n\n\n\n\nBasic data types in R that can occur in tables\n\n\n\n\n\n\n\n\n\n\n\n\nType\nShort\nDescription\nExample(s)\n\n\n\n\nNumeric (double)\n<dbl>\nFloating point number\n3.14159\n\n\nCharacter\n<char>\nCharacter (text) string\n\"S1P d18:1\", \"BQC\"\n\n\nLogical\n<lgl>\nTrue or False, 1 or 0\nTRUE; FALSE\n\n\nInteger\n<int>\nNumber without digits\n3L; 7011L; -13L\n\n\nFactor\n<fct>\nCategorical data\nBQC; TQC; SPL\n\n\n\nMoreover there are data and time types, i.e. date <dt>, time <tm> and datetime <dttm>\n\n\nYou can print tables in the console or in R notebook (.Rmd), which will also show the column types:\n\nd_wide\n\n#> # A tibble: 215 × 430\n#>   DataFileme        AcqTimeStamp        SPLType VialPosition `CE 14:0` `CE 15:0`\n#>   <chr>             <dttm>              <chr>   <chr>            <dbl>     <dbl>\n#> 1 001_EQC_TQC prer… 2018-04-12 18:28:00 EQC     Vial 2            1532       515\n#> 2 002_EQC_TQC prer… 2018-04-12 18:39:00 EQC     Vial 2            1029       911\n#> 3 003_EQC_TQC prer… 2018-04-12 18:51:00 EQC     Vial 2             685       649\n#> 4 004_EQC_TQC prer… 2018-04-12 19:02:00 EQC     Vial 2            1283       576\n#> 5 005_EQC_TQC prer… 2018-04-12 19:13:00 EQC     Vial 2             946       732\n#> 6 006_EBLK_Extract… 2018-04-12 19:25:00 PBLK    P1-A1              132        75\n#> # … with 209 more rows, and 424 more variables: `CE 16:0` <dbl>,\n#> #   `CE 16:1` <dbl>, `CE 16:2` <dbl>, `CE 17:0` <dbl>, `CE 17:1` <dbl>,\n#> #   `CE 18:0` <dbl>, `CE 18:1` <dbl>, `CE 18:1 d7 (ISTD)` <dbl>, …\n\n\n\n\n2.1.2 Read CSVs with missing values\nData files often contain missing values, i.e. as empty cells. read_csv() assigns empty/missing values during the import to the specific value NA (Not Available). Missing values will in general not affect to data type guessed by read_csv(), except all values or missing in a column (see later).\nHowever, it might be that your data file contains specific text for missing values, for instance “ND”,”LOD” or lowercase “na”. Results from e.g. clinical chemistry labs frequently indicate not available data with a short text such as “clotted”, “hemolytic”, “no received” to explain why a value was not reported. What happens when we import such a file using default read_csv?\n\ndata_file_path <- here(\"data/Testdata_Lipidomics_flat_wide_with_differentNA_V2.csv\")\nd_wide <- readr::read_csv(data_file_path, trim_ws = TRUE)\n\n#> Rows: 215 Columns: 432\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr  (109): DataFileNDme, SampleType, VialPosition, CE 15:0, CE 16:0, CE 17:...\n#> dbl  (320): CE 14:0, CE 16:1, CE 17:1, CE 18:0, CE 18:1, CE 18:1 d7 (ISTD), ...\n#> lgl    (2): CE 16:2, LPC 16:0\n#> dttm   (1): AcqTimeStamp\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\n\nread_csv() was mislead by the presence of unknown text values and guessed the data types wrongly as <char> for some columns. We also have two columns of the type <lgl>, which stand for logical (TRUE/FALSE), what happend here? All peak areas of e.g. CE 16:2 were missing and read_csv has no way to guess what is the intended data type, in which case it chooses <lgl>as default.\nWe will not be able to perform any calculations for columns that are text or logical. We therefore need to explicitly tell R what values to interpret as missing values (NA). We can do this by providing a list of texts that should be interpreted as NA via the na parameter:\n\ndata_file_path <- here(\"data/Testdata_Lipidomics_flat_wide_with_differentNA_V2.csv\")\nd_wide <- readr::read_csv(data_file_path, \n                          trim_ws = TRUE, \n                          na = c(\"ND\", \"LOD\"))\n\n#> Warning: One or more parsing issues, see `problems()` for details\n\n\n#> Rows: 215 Columns: 432\n#> ── Column specification ────────────────────────────────────────────────────────\n#> Delimiter: \",\"\n#> chr    (3): DataFileNDme, SampleType, VialPosition\n#> dbl  (425): CE 14:0, CE 15:0, CE 16:0, CE 16:1, CE 17:0, CE 17:1, CE 18:0, C...\n#> lgl    (3): CE 16:2, Cer d18:2/24:0, LPC 16:0\n#> dttm   (1): AcqTimeStamp\n#> \n#> ℹ Use `spec()` to retrieve the full column specification for this data.\n#> ℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n\nprint(d_wide)\n\n#> # A tibble: 215 × 432\n#>   DataFileNDme   AcqTimeStamp        SampleType VialPosition `CE 14:0` `CE 15:0`\n#>   <chr>          <dttm>              <chr>      <chr>            <dbl>     <dbl>\n#> 1 001_EQC_TQC p… 2018-04-12 18:28:00 EQC        Vial 2            1532       515\n#> 2 002_EQC_TQC p… 2018-04-12 18:39:00 EQC        Vial 2            1029        NA\n#> 3 003_EQC_TQC p… 2018-04-12 18:51:00 EQC        Vial 2             685       649\n#> 4 004_EQC_TQC p… 2018-04-12 19:02:00 EQC        Vial 2            1283       576\n#> 5 005_EQC_TQC p… 2018-04-12 19:13:00 EQC        Vial 2             946       732\n#> 6 006_EBLK_Extr… 2018-04-12 19:25:00 PBLK       P1-A1              132        NA\n#> # … with 209 more rows, and 426 more variables: `CE 16:0` <dbl>,\n#> #   `CE 16:1` <dbl>, `CE 16:2` <lgl>, `CE 17:0` <dbl>, `CE 17:1` <dbl>,\n#> #   `CE 18:0` <dbl>, `CE 18:1` <dbl>, `CE 18:1 d7 (ISTD)` <dbl>, …\n\n\n\n\n\n\n\n\nMissing values can be a source of difficult to trace erros. Defined and careful dealing with missing values is therefore important. Also note, that there is no way to have different types of missing values in the standard R data table formats."
  },
  {
    "objectID": "import_data.html#importing-an-excel-table",
    "href": "import_data.html#importing-an-excel-table",
    "title": "2  Import data into R",
    "section": "2.2 Importing an Excel table",
    "text": "2.2 Importing an Excel table\nImporting Excel is easy too via the help of external packages such as readxl. Note that you will need to define which sheet to import (e.g. below Sheet1). The same considerations about missing values and white spaces as detailed before apply here too.\n\ndata_file_path <- here(\"data/Testdata_Lipidomics_flat_wide_V2.xlsx\")\nd_wide <- readxl::read_xlsx(data_file_path,\n                            sheet = \"Sheet1\",\n                            trim_ws = TRUE, \n                            na = c(\"ND\"))\nprint(d_wide)\n\n#> # A tibble: 215 × 432\n#>   DataFileName          AcqTimeStamp SampleType VialPosition `CE 14:0` `CE 15:0`\n#>   <chr>                 <chr>        <chr>      <chr>            <dbl>     <dbl>\n#> 1 001_EQC_TQC prerun 0… 2018-04-12T… EQC        Vial 2            1532       515\n#> 2 002_EQC_TQC prerun 0… 2018-04-12T… EQC        Vial 2            1029       911\n#> 3 003_EQC_TQC prerun 0… 2018-04-12T… EQC        Vial 2             685       649\n#> 4 004_EQC_TQC prerun 0… 2018-04-12T… EQC        Vial 2            1283       576\n#> 5 005_EQC_TQC prerun 0… 2018-04-12T… EQC        Vial 2             946       732\n#> 6 006_EBLK_Extracted B… 2018-04-12T… PBLK       P1-A1              132        NA\n#> # … with 209 more rows, and 426 more variables: `CE 16:0` <dbl>,\n#> #   `CE 16:1` <dbl>, `CE 16:2` <dbl>, `CE 17:0` <chr>, `CE 17:1` <dbl>,\n#> #   `CE 18:0` <dbl>, `CE 18:1` <dbl>, `CE 18:1 d7 (ISTD)` <dbl>, …\n\n\n\n\n\n\n\n\nCheck your imported data\n\n\n\nCheck integrity of your imported data, that data types were correctly assigned and that missing values were corrently handled. Do not assume the imported data is fine without having reason to do so."
  },
  {
    "objectID": "datawrangling.html",
    "href": "datawrangling.html",
    "title": "3  Select data and plot",
    "section": "",
    "text": "#> here() starts at E:/OneDrive - National University of Singapore/Data/Projects/RwithSLING\n\n\n#> ── Attaching packages ─────────────────────────────────────── tidyverse 1.3.1 ──\n\n\n#> ✔ ggplot2 3.3.5     ✔ purrr   0.3.4\n#> ✔ tibble  3.1.6     ✔ dplyr   1.0.8\n#> ✔ tidyr   1.2.0     ✔ stringr 1.4.0\n#> ✔ readr   2.1.2     ✔ forcats 0.5.1\n\n\n#> ── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n#> ✖ dplyr::filter() masks stats::filter()\n#> ✖ dplyr::lag()    masks stats::lag()"
  },
  {
    "objectID": "datawrangling.html#import-an-agilent-masshunter-csv-file-using-slingtools",
    "href": "datawrangling.html#import-an-agilent-masshunter-csv-file-using-slingtools",
    "title": "3  Select data and plot",
    "section": "3.1 Import an Agilent MassHunter CSV file using SLINGtools",
    "text": "3.1 Import an Agilent MassHunter CSV file using SLINGtools\n\ndata_file_path <- here(\"data/Testdata_Lipidomics_MHQuant_Detailed_V2.csv\")\n\nd_orig <- read_MassHunterCSV(data_file_path)\n\n#> Reading 'Testdata_Lipidomics_MHQuant_Detailed_V2.csv' ... \n#> \nindexing Testdata_Lipidomics_MHQuant_Detailed_V2.csv [======] 2.15GB/s, eta:  0s\n                                                                                \nImported  215 samples with 428 transitions\n\nprint(d_orig)\n\n#> # A tibble: 92,020 × 14\n#>   DataFileName      DataName SampleType AcqTimeStamp        VialPosition Feature\n#>   <chr>             <chr>    <chr>      <dttm>              <chr>        <chr>  \n#> 1 001_EQC_TQC prer… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 14:0\n#> 2 001_EQC_TQC prer… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 15:0\n#> 3 001_EQC_TQC prer… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 16:0\n#> 4 001_EQC_TQC prer… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 16:1\n#> 5 001_EQC_TQC prer… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 16:2\n#> 6 001_EQC_TQC prer… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 17:0\n#> # … with 92,014 more rows, and 8 more variables: IonPolarity <fct>,\n#> #   PrecursorMZ <dbl>, ProductMZ <dbl>, CollisionEnergy <dbl>, RT <dbl>,\n#> #   Area <dbl>, FWHM <dbl>, MI <lgl>"
  },
  {
    "objectID": "datawrangling.html#select-remove-re-order-and-rename-columns",
    "href": "datawrangling.html#select-remove-re-order-and-rename-columns",
    "title": "3  Select data and plot",
    "section": "3.2 Select, remove, re-order, and rename columns",
    "text": "3.2 Select, remove, re-order, and rename columns\nUse the function select()\n\nd <- d_orig |> \n  dplyr::select(AnalysisID = \"DataFileName\", \n                QCtype = SampleType,\n                Compound = Feature, \n                Intensity = Area,\n                RT,\n                PrecursorMZ)\nprint(d)\n\n#> # A tibble: 92,020 × 6\n#>   AnalysisID              QCtype Compound Intensity    RT PrecursorMZ\n#>   <chr>                   <chr>  <chr>        <dbl> <dbl>       <dbl>\n#> 1 001_EQC_TQC prerun 01.d EQC    CE 14:0       1532  6.98        615.\n#> 2 001_EQC_TQC prerun 01.d EQC    CE 15:0        515  7.13        629.\n#> 3 001_EQC_TQC prerun 01.d EQC    CE 16:0     127953  7.16        643.\n#> 4 001_EQC_TQC prerun 01.d EQC    CE 16:1      40374  7.00        641.\n#> 5 001_EQC_TQC prerun 01.d EQC    CE 16:2       1340  6.82        639.\n#> 6 001_EQC_TQC prerun 01.d EQC    CE 17:0       7227  7.22        657.\n#> # … with 92,014 more rows"
  },
  {
    "objectID": "datawrangling.html#filter-rows",
    "href": "datawrangling.html#filter-rows",
    "title": "3  Select data and plot",
    "section": "3.3 Filter rows",
    "text": "3.3 Filter rows\nUse the function filter()\n\n# \nd |> filter(AnalysisID == \"149_BQC_PQC17.d \")\n\n#> # A tibble: 0 × 6\n#> # … with 6 variables: AnalysisID <chr>, QCtype <chr>, Compound <chr>,\n#> #   Intensity <dbl>, RT <dbl>, PrecursorMZ <dbl>\n\nd |> filter(AnalysisID == \"149-bQC_PQC17.d\", Compound == \"TG 48:1 [-18:1]\")\n\n#> # A tibble: 0 × 6\n#> # … with 6 variables: AnalysisID <chr>, QCtype <chr>, Compound <chr>,\n#> #   Intensity <dbl>, RT <dbl>, PrecursorMZ <dbl>\n\nd |> filter(QCtype == \"BQC\")\n\n#> # A tibble: 10,272 × 6\n#>   AnalysisID      QCtype Compound Intensity    RT PrecursorMZ\n#>   <chr>           <chr>  <chr>        <dbl> <dbl>       <dbl>\n#> 1 018_BQC_PQC01.d BQC    CE 14:0       1473  6.98        615.\n#> 2 018_BQC_PQC01.d BQC    CE 15:0        744  7.07        629.\n#> 3 018_BQC_PQC01.d BQC    CE 16:0     111189  7.16        643.\n#> 4 018_BQC_PQC01.d BQC    CE 16:1      52297  6.98        641.\n#> 5 018_BQC_PQC01.d BQC    CE 16:2       2502  6.83        639.\n#> 6 018_BQC_PQC01.d BQC    CE 17:0       9178  7.22        657.\n#> # … with 10,266 more rows\n\nd |> filter(QCtype == \"BQC\" | QCtype == \"TQC\" )\n\n#> # A tibble: 17,120 × 6\n#>   AnalysisID      QCtype Compound Intensity    RT PrecursorMZ\n#>   <chr>           <chr>  <chr>        <dbl> <dbl>       <dbl>\n#> 1 016_TQC_TQC01.d TQC    CE 14:0       1248  6.98        615.\n#> 2 016_TQC_TQC01.d TQC    CE 15:0       1008  7.07        629.\n#> 3 016_TQC_TQC01.d TQC    CE 16:0     167626  7.16        643.\n#> 4 016_TQC_TQC01.d TQC    CE 16:1      42972  7.01        641.\n#> 5 016_TQC_TQC01.d TQC    CE 16:2       1966  6.83        639.\n#> 6 016_TQC_TQC01.d TQC    CE 17:0       8618  7.20        657.\n#> # … with 17,114 more rows\n\nd |> filter(QCtype == \"BQC\" & QCtype == \"TQC\" )\n\n#> # A tibble: 0 × 6\n#> # … with 6 variables: AnalysisID <chr>, QCtype <chr>, Compound <chr>,\n#> #   Intensity <dbl>, RT <dbl>, PrecursorMZ <dbl>\n\nd |> filter(QCtype %in% c(\"BQC\", \"TQC\"))\n\n#> # A tibble: 17,120 × 6\n#>   AnalysisID      QCtype Compound Intensity    RT PrecursorMZ\n#>   <chr>           <chr>  <chr>        <dbl> <dbl>       <dbl>\n#> 1 016_TQC_TQC01.d TQC    CE 14:0       1248  6.98        615.\n#> 2 016_TQC_TQC01.d TQC    CE 15:0       1008  7.07        629.\n#> 3 016_TQC_TQC01.d TQC    CE 16:0     167626  7.16        643.\n#> 4 016_TQC_TQC01.d TQC    CE 16:1      42972  7.01        641.\n#> 5 016_TQC_TQC01.d TQC    CE 16:2       1966  6.83        639.\n#> 6 016_TQC_TQC01.d TQC    CE 17:0       8618  7.20        657.\n#> # … with 17,114 more rows"
  },
  {
    "objectID": "datawrangling.html#lets-finally-plot",
    "href": "datawrangling.html#lets-finally-plot",
    "title": "3  Select data and plot",
    "section": "3.4 Let’s finally plot",
    "text": "3.4 Let’s finally plot\n\n# For this we take one single sample, let's say a  BQC\nd_plot <- d |> \n  filter(AnalysisID == \"066_BQC_PQC07.d\")\n\n# Base R\nplot(x = d_plot$PrecursorMZ, y = d_plot$RT)\n\n# ggplot\nggplot(d_plot, aes(x = PrecursorMZ, y = RT)) +\n  geom_point(size = 2, color = \"blue\")\n\n#> Warning: Removed 2 rows containing missing values (geom_point)."
  },
  {
    "objectID": "datawrangling.html#split-column-to-get-lipid-clas",
    "href": "datawrangling.html#split-column-to-get-lipid-clas",
    "title": "3  Select data and plot",
    "section": "3.5 Split column to get lipid clas",
    "text": "3.5 Split column to get lipid clas\n\nd_plot_wclass <- d_plot |> \n  separate(\n    col = Compound,\n    into = c(\"lipidclass\", \"chain\"), \n    sep = \" \",\n    extra = \"merge\", \n    remove = FALSE) \n    \nd_plot_wclass\n\n#> # A tibble: 428 × 8\n#>   AnalysisID      QCtype Compound lipidclass chain Intensity    RT PrecursorMZ\n#>   <chr>           <chr>  <chr>    <chr>      <chr>     <dbl> <dbl>       <dbl>\n#> 1 066_BQC_PQC07.d BQC    CE 14:0  CE         14:0       1152  6.98        615.\n#> 2 066_BQC_PQC07.d BQC    CE 15:0  CE         15:0        984  7.06        629.\n#> 3 066_BQC_PQC07.d BQC    CE 16:0  CE         16:0      93268  7.16        643.\n#> 4 066_BQC_PQC07.d BQC    CE 16:1  CE         16:1      51054  7.01        641.\n#> 5 066_BQC_PQC07.d BQC    CE 16:2  CE         16:2       1870  6.83        639.\n#> 6 066_BQC_PQC07.d BQC    CE 17:0  CE         17:0       9050  7.22        657.\n#> # … with 422 more rows"
  },
  {
    "objectID": "datawrangling.html#now-lets-plot-again",
    "href": "datawrangling.html#now-lets-plot-again",
    "title": "3  Select data and plot",
    "section": "3.6 Now let’s plot again",
    "text": "3.6 Now let’s plot again\n\n# ggplot\nggplot(d_plot_wclass, aes(x = PrecursorMZ, y = RT, color = lipidclass)) +\n  geom_point(size = 2)\n\n#> Warning: Removed 2 rows containing missing values (geom_point)."
  },
  {
    "objectID": "datawrangling.html#another-time",
    "href": "datawrangling.html#another-time",
    "title": "3  Select data and plot",
    "section": "3.7 … another time",
    "text": "3.7 … another time\n\n# ggplot\nggplot(d_plot_wclass, aes(x = PrecursorMZ, y = RT, color = lipidclass, size = Intensity/10)) +\n  geom_point()\n\n#> Warning: Removed 2 rows containing missing values (geom_point).\n\n\n\n\n\n\n\n\n\n\n\nComparisons in R\n\n\n\nRun following lines and try understand the result\n\n\"CE 18:1\" == \"CE 18:1\"\n\n#> [1] TRUE\n\n\"CE 18:1\" == \"CE 18:1 \"\n\n#> [1] FALSE\n\n\"CE 18:1\" == \"CE  18:1\"\n\n#> [1] FALSE\n\n\"Ce 18:1\" == \"CE 18:1\"\n\n#> [1] FALSE\n\nstringr::str_trim(\"CE 18:1 \")\n\n#> [1] \"CE 18:1\"\n\nstringr::str_trim(\"   CE    18:1 \")\n\n#> [1] \"CE    18:1\"\n\nstringr::str_squish(\"   CE    18:1 \")\n\n#> [1] \"CE 18:1\"\n\nstringr::str_detect(\"LPC 18:1 (IS)\", pattern = \"IS\")\n\n#> [1] TRUE\n\nstringr::str_detect(\"LPC 18:1 (ISTD)\", pattern = \"IS\")\n\n#> [1] TRUE\n\nstringr::str_detect(\"LPC 18:1 (IS)\", pattern = \"ISTD\")\n\n#> [1] FALSE\n\nstringr::str_detect(\"LPC 18:1 (IS)\", pattern = \"LPC\")\n\n#> [1] TRUE\n\nstringr::str_replace(\"Acylcarnitine 18:1\", \n                     pattern = \"Acylcarnitine\",\n                     replacement = \"CAR\")\n\n#> [1] \"CAR 18:1\"\n\nstringr::str_replace(\"TG 48:2 [SIM] Results\", \n                     pattern = \" Results\",\n                     replacement = \"\")\n\n#> [1] \"TG 48:2 [SIM]\"\n\nstringr::str_replace(\"112_BQC_A9334.d\", \n                     pattern = \".d\",\n                     replacement = \"\")\n\n#> [1] \"112_BQC_A9334\"\n\nstringr::str_to_lower(\"CE 18:1\")\n\n#> [1] \"ce 18:1\"\n\nSample_ID <- 1\ntry(Sample-ID <- 1)\n\n#> Error in Sample - ID <- 1 : object 'Sample' not found\n\n# d |> filter(AnalysisID == \"149_BQC_PQC17.d\", \n#                    str_detect(Compound, \"IS|LPI\") )\n# \n# d |> filter(str_detect(AnalysisID, \"BQC|TQC\") , \n#                    str_detect(Compound, \"IS\")) -> temp"
  },
  {
    "objectID": "datawrangling.html#convert-long-table-to-wide-table-format",
    "href": "datawrangling.html#convert-long-table-to-wide-table-format",
    "title": "3  Select data and plot",
    "section": "3.8 Convert long table to wide table format",
    "text": "3.8 Convert long table to wide table format\n\n# d_area_temp <- d |> \n#   pivot_wider(names_from = \"Compound\" ,values_from = \"Area\")\n\n\n# d_BQC <- d_area |> filter(QCtype == \"BQC\")\n# \n# \n# d_res1 <- d_BQC |>\n#   summarise(\n#     across(.cols = -seq_no:-AcqTimeStamp,\n#            .fns = ~ sd(.)/mean(.)*100)\n#   )\n# d_res1\n# \n# d_BQC_areas <- d_BQC |> dplyr::select(-seq_no:-AcqTimeStamp)\n\n# d_res2 <- purrr::map_df(d_BQC_areas, .f = ~ sd(.)/mean(.)*100)\n# d_res2\n# \n# d_res3 <- sapply(X = d_BQC_areas, \n#                  FUN = function(x) c(CV = sd(x)/mean(x) * 100,\n#                                      RobustCV = mad(x)/median(x) * 100))\n# as.data.frame(d_res3)\n# as.data.frame(t(d_res3))\n# \n# d_BQC_long <- d_BQC |> pivot_longer(cols = -seq_no:-AcqTimeStamp,\n#                                     names_to = \"Compound\",\n#                                     values_to = \"Area\")\n# \n# d_BQC_stats <- d_BQC_long |> \n#   group_by(Compound) |> \n#   summarise(\n#     count = n(),\n#     Mean = mean(Area),\n#     Min = min(Area),\n#     CV = sd(Area)/mean(Area) *100,\n#     logCV = sqrt(exp(1)^(sd(log(Area))^2)-1) *100,\n#     logCV_roche = sqrt(10^(log(10)*sd(log(Area, 10))^2)-1) *100,\n#     rCVq = 0.75 * IQR(Area, na.rm = TRUE)/median(Area) *100,\n#     rCVm = mad(Area, constant = 1.4826)/median(Area) *100\n#   )\n# d_BQC_stats\n# \n# hist(d_BQC_stats$CV)\n# hist(d_BQC_stats$rCVm)\n# \n# ggplot(d_BQC_stats) +\n#   geom_histogram(aes(x=CV))\n# \n# d_BQC_stats_long <- d_BQC_stats |>\n#   dplyr:::select(Compound, CV,rCVm,,rCVq, logCV) |> \n#   pivot_longer(cols = -Compound, names_to= \"CV_type\" ,values_to = \"Value\")\n# d_BQC_stats_long\n# \n# ggplot(d_BQC_stats_long) +\n#   geom_histogram(aes(x=Value, fill = CV_type)) + scale_x_continuous(limits = c(0,150)) + facet_wrap(~CV_type)\n# \n# \n# plot(d_BQC_stats$CV, d_BQC_stats$logCV)\n# plot(d_BQC_stats$CV, d_BQC_stats$logCV, xlim = c(0,100), ylim = c(0,100))\n# plot(d_BQC_stats$CV, d_BQC_stats$rCVm)\n# plot(d_BQC_stats$logCV, d_BQC_stats$rCVm, xlim = c(0,200))\n# plot(d_BQC_stats$CV, d_BQC_stats$rCVq)"
  },
  {
    "objectID": "import_MSdatasets.html",
    "href": "import_MSdatasets.html",
    "title": "4  Read MS datasets into R",
    "section": "",
    "text": "Pre-processed MS datasets refers to data exported from MS rawdata processing software, such as Agilent MassHunter, Sciex Multiquant, and open-source tools as MRMkit and Skyline. These datasets usually contain peak/signal intensities and associated data such as retention time, FWHM, as well as information about the sample.\nThe R package SLINGtools provided helper functions to import data files obtained from different tools."
  },
  {
    "objectID": "import_MSdatasets.html#import-peak-areas-from-agilent-masshunter-csv-file",
    "href": "import_MSdatasets.html#import-peak-areas-from-agilent-masshunter-csv-file",
    "title": "4  Read MS datasets into R",
    "section": "4.1 Import peak areas from Agilent MassHunter CSV file",
    "text": "4.1 Import peak areas from Agilent MassHunter CSV file\n\n\nlibrary(SLINGtools)\ndata_file_path <- here::here(\"data/Testdata_Lipidomics_MHQuant_Detailed_V2.csv\")\nd_wide <- SLINGtools::read_MassHunterCSV_wide(data_file_path, field = \"Area\")\n\nReading 'Testdata_Lipidomics_MHQuant_Detailed_V2.csv' ... \n\nindexing Testdata_Lipidomics_MHQuant_Detailed_V2.csv [=====-] 2.15GB/s, eta:  0s\nindexing Testdata_Lipidomics_MHQuant_Detailed_V2.csv [======] 2.15GB/s, eta:  0s\n                                                                                \nImported  215 samples with 428 transitions \n\nprint(d_wide)\n\n# A tibble: 215 × 432\n   DataFileName  AcqTimeStamp        SampleType VialPosition `CE 14:0` `CE 15:0`\n   <chr>         <dttm>              <chr>      <chr>            <dbl>     <dbl>\n 1 001_EQC_TQC … 2018-04-12 18:28:00 EQC        Vial 2            1532       515\n 2 002_EQC_TQC … 2018-04-12 18:39:00 EQC        Vial 2            1029       911\n 3 003_EQC_TQC … 2018-04-12 18:51:00 EQC        Vial 2             685       649\n 4 004_EQC_TQC … 2018-04-12 19:02:00 EQC        Vial 2            1283       576\n 5 005_EQC_TQC … 2018-04-12 19:13:00 EQC        Vial 2             946       732\n 6 006_EBLK_Ext… 2018-04-12 19:25:00 PBLK       P1-A1              132        75\n 7 007_SOLV_Bla… 2018-04-12 19:36:00 SBLK       Vial 1             241        56\n 8 008_LTR_LTR0… 2018-04-12 19:48:00 LTR        P1-A2             1118       905\n 9 009_NIST_NIS… 2018-04-12 19:59:00 NIST       P1-A3             1499       482\n10 010_TQCd-0_T… 2018-04-12 20:11:00 RQC        Vial 4              77        96\n# … with 205 more rows, and 426 more variables: `CE 16:0` <dbl>,\n#   `CE 16:1` <dbl>, `CE 16:2` <dbl>, `CE 17:0` <dbl>, `CE 17:1` <dbl>,\n#   `CE 18:0` <dbl>, `CE 18:1` <dbl>, `CE 18:1 d7 (ISTD)` <dbl>,\n#   `CE 18:2` <dbl>, `CE 18:3` <dbl>, `CE 20:1` <dbl>, `CE 20:2` <dbl>,\n#   `CE 20:3` <dbl>, `CE 20:4` <dbl>, `CE 20:5` <dbl>, `CE 22:0` <dbl>,\n#   `CE 22:1` <dbl>, `CE 22:4` <dbl>, `CE 22:5` <dbl>, `CE 22:6` <dbl>,\n#   `CE 24:4` <dbl>, `Cer d18:0/16:0` <dbl>, `Cer d18:0/18:0` <dbl>, …"
  },
  {
    "objectID": "import_MSdatasets.html#import-all-data-from-an-agilent-masshunter-csv-file",
    "href": "import_MSdatasets.html#import-all-data-from-an-agilent-masshunter-csv-file",
    "title": "4  Read MS datasets into R",
    "section": "4.2 Import all data from an Agilent MassHunter CSV file",
    "text": "4.2 Import all data from an Agilent MassHunter CSV file\nDetail MassHunter Quant.\n\n\ndata_file_path <- here::here(\"data/Testdata_Lipidomics_MHQuant_Detailed_V2.csv\")\nd_all_long <- SLINGtools::read_MassHunterCSV(data_file_path)\n\nReading 'Testdata_Lipidomics_MHQuant_Detailed_V2.csv' ... \n\nindexing Testdata_Lipidomics_MHQuant_Detailed_V2.csv [=====-] 2.15GB/s, eta:  0s\nindexing Testdata_Lipidomics_MHQuant_Detailed_V2.csv [======] 2.15GB/s, eta:  0s\n                                                                                \nImported  215 samples with 428 transitions \n\nprint(d_all_long)\n\n# A tibble: 92,020 × 14\n   DataFileName     DataName SampleType AcqTimeStamp        VialPosition Feature\n   <chr>            <chr>    <chr>      <dttm>              <chr>        <chr>  \n 1 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 14:0\n 2 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 15:0\n 3 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 16:0\n 4 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 16:1\n 5 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 16:2\n 6 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 17:0\n 7 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 17:1\n 8 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 18:0\n 9 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 18:1\n10 001_EQC_TQC pre… 001_EQC… EQC        2018-04-12 18:28:00 Vial 2       CE 18:…\n# … with 92,010 more rows, and 8 more variables: IonPolarity <fct>,\n#   PrecursorMZ <dbl>, ProductMZ <dbl>, CollisionEnergy <dbl>, RT <dbl>,\n#   Area <dbl>, FWHM <dbl>, MI <lgl>"
  }
]